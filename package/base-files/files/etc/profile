[ -e /tmp/.failsafe ] && export FAILSAFE=1

[ -f /etc/banner ] && cat /etc/banner
[ -n "$FAILSAFE" ] && cat /etc/banner.failsafe

fgrep -sq '/ overlay ro,' /proc/mounts && {
	echo 'Your JFFS2-partition seems full and overlayfs is mounted read-only.'
	echo 'Please try to remove files from /overlay/upper/... and reboot!'
}

export PATH="%PATH%"
export HOME=$(grep -e "^${USER:-root}:" /etc/passwd | cut -d ":" -f 6)
export HOME=${HOME:-/root}
export PS1='\u@\h:\w\$ '
export ENV=/etc/shinit

case "$TERM" in
	xterm*|rxvt*)
		export PS1='\[\e]0;\u@\h: \w\a\]'$PS1
		;;
esac

[ -n "$FAILSAFE" ] || {
	for FILE in /etc/profile.d/*.sh; do
		[ -e "$FILE" ] && . "$FILE"
	done
	unset FILE
}

if ( grep -qs '^root::' /etc/shadow && \
     [ -z "$FAILSAFE" ] )
then
cat << EOF
=== WARNING! =====================================
There is no root password defined on this device!
Use the "passwd" command to set up a new password
in order to prevent unauthorized SSH logins.
--------------------------------------------------
EOF
fi

service() {
	if [ -f "/etc/init.d/$1" ]; then
		/etc/init.d/$@
	else
		echo "Usage: service <service> [command]"
		if [ -n "$1" ]; then
			echo "Service "'"'"$1"'"'" not found, the following services are available:"
		else 
			echo "The following services are available:"
		fi
		for F in /etc/init.d/* ; do
			printf "%-30s\t%10s\t%10s\n"  "$F" \
			$( $($F enabled) && echo "enabled" || echo "disabled" ) \
			$( [ "$(ubus call service list "{ 'verbose': true, 'name': '$(basename $F)' }" \
			| jsonfilter -q -e "@.$(basename $F).instances[*].running")" = "true" ] \
			&& echo "running" || echo "stopped" )
		done;
		return 1
	fi
}
